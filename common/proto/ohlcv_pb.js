// source: ohlcv.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */ // GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */ // @ts-nocheck
"use strict";
var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
    if (this) {
        return this;
    }
    if (typeof window !== 'undefined') {
        return window;
    }
    if (typeof global !== 'undefined') {
        return global;
    }
    if (typeof self !== 'undefined') {
        return self;
    }
    return Function('return this')();
}).call(null);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.ohlcv.GetOhlcvRequest', null, global);
goog.exportSymbol('proto.ohlcv.GetOhlcvResponse', null, global);
goog.exportSymbol('proto.ohlcv.OhlcvBar', null, global);
goog.exportSymbol('proto.ohlcv.Timeframe', null, global);
goog.exportSymbol('proto.ohlcv.Timeframe.ValueCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.ohlcv.GetOhlcvRequest = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ohlcv.GetOhlcvRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
   * @public
   * @override
   */ proto.ohlcv.GetOhlcvRequest.displayName = 'proto.ohlcv.GetOhlcvRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.ohlcv.GetOhlcvResponse = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.ohlcv.GetOhlcvResponse.repeatedFields_, null);
};
goog.inherits(proto.ohlcv.GetOhlcvResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
   * @public
   * @override
   */ proto.ohlcv.GetOhlcvResponse.displayName = 'proto.ohlcv.GetOhlcvResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.ohlcv.OhlcvBar = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ohlcv.OhlcvBar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
   * @public
   * @override
   */ proto.ohlcv.OhlcvBar.displayName = 'proto.ohlcv.OhlcvBar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */ proto.ohlcv.Timeframe = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ohlcv.Timeframe.oneofGroups_);
};
goog.inherits(proto.ohlcv.Timeframe, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
   * @public
   * @override
   */ proto.ohlcv.Timeframe.displayName = 'proto.ohlcv.Timeframe';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.ohlcv.GetOhlcvRequest.prototype.toObject = function(opt_includeInstance) {
        return proto.ohlcv.GetOhlcvRequest.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ohlcv.GetOhlcvRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.ohlcv.GetOhlcvRequest.toObject = function(includeInstance, msg) {
        var f, obj = {
            symId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            timeframe: (f = msg.getTimeframe()) && proto.ohlcv.Timeframe.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ohlcv.GetOhlcvRequest}
 */ proto.ohlcv.GetOhlcvRequest.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.ohlcv.GetOhlcvRequest;
    return proto.ohlcv.GetOhlcvRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ohlcv.GetOhlcvRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ohlcv.GetOhlcvRequest}
 */ proto.ohlcv.GetOhlcvRequest.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {string} */ reader.readString();
                msg.setSymId(value);
                break;
            case 2:
                var value = new proto.ohlcv.Timeframe;
                reader.readMessage(value, proto.ohlcv.Timeframe.deserializeBinaryFromReader);
                msg.setTimeframe(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.ohlcv.GetOhlcvRequest.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.ohlcv.GetOhlcvRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ohlcv.GetOhlcvRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.ohlcv.GetOhlcvRequest.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getSymId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getTimeframe();
    if (f != null) {
        writer.writeMessage(2, f, proto.ohlcv.Timeframe.serializeBinaryToWriter);
    }
};
/**
 * optional string sym_id = 1;
 * @return {string}
 */ proto.ohlcv.GetOhlcvRequest.prototype.getSymId = function() {
    return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, "");
};
/**
 * @param {string} value
 * @return {!proto.ohlcv.GetOhlcvRequest} returns this
 */ proto.ohlcv.GetOhlcvRequest.prototype.setSymId = function(value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional Timeframe timeframe = 2;
 * @return {?proto.ohlcv.Timeframe}
 */ proto.ohlcv.GetOhlcvRequest.prototype.getTimeframe = function() {
    return /** @type{?proto.ohlcv.Timeframe} */ jspb.Message.getWrapperField(this, proto.ohlcv.Timeframe, 2);
};
/**
 * @param {?proto.ohlcv.Timeframe|undefined} value
 * @return {!proto.ohlcv.GetOhlcvRequest} returns this
*/ proto.ohlcv.GetOhlcvRequest.prototype.setTimeframe = function(value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.ohlcv.GetOhlcvRequest} returns this
 */ proto.ohlcv.GetOhlcvRequest.prototype.clearTimeframe = function() {
    return this.setTimeframe(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.GetOhlcvRequest.prototype.hasTimeframe = function() {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */ proto.ohlcv.GetOhlcvResponse.repeatedFields_ = [
    1
];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.ohlcv.GetOhlcvResponse.prototype.toObject = function(opt_includeInstance) {
        return proto.ohlcv.GetOhlcvResponse.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ohlcv.GetOhlcvResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.ohlcv.GetOhlcvResponse.toObject = function(includeInstance, msg) {
        var f, obj = {
            barsList: jspb.Message.toObjectList(msg.getBarsList(), proto.ohlcv.OhlcvBar.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ohlcv.GetOhlcvResponse}
 */ proto.ohlcv.GetOhlcvResponse.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.ohlcv.GetOhlcvResponse;
    return proto.ohlcv.GetOhlcvResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ohlcv.GetOhlcvResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ohlcv.GetOhlcvResponse}
 */ proto.ohlcv.GetOhlcvResponse.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = new proto.ohlcv.OhlcvBar;
                reader.readMessage(value, proto.ohlcv.OhlcvBar.deserializeBinaryFromReader);
                msg.addBars(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.ohlcv.GetOhlcvResponse.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.ohlcv.GetOhlcvResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ohlcv.GetOhlcvResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.ohlcv.GetOhlcvResponse.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getBarsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.ohlcv.OhlcvBar.serializeBinaryToWriter);
    }
};
/**
 * repeated OhlcvBar bars = 1;
 * @return {!Array<!proto.ohlcv.OhlcvBar>}
 */ proto.ohlcv.GetOhlcvResponse.prototype.getBarsList = function() {
    return /** @type{!Array<!proto.ohlcv.OhlcvBar>} */ jspb.Message.getRepeatedWrapperField(this, proto.ohlcv.OhlcvBar, 1);
};
/**
 * @param {!Array<!proto.ohlcv.OhlcvBar>} value
 * @return {!proto.ohlcv.GetOhlcvResponse} returns this
*/ proto.ohlcv.GetOhlcvResponse.prototype.setBarsList = function(value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.ohlcv.OhlcvBar=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ohlcv.OhlcvBar}
 */ proto.ohlcv.GetOhlcvResponse.prototype.addBars = function(opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ohlcv.OhlcvBar, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ohlcv.GetOhlcvResponse} returns this
 */ proto.ohlcv.GetOhlcvResponse.prototype.clearBarsList = function() {
    return this.setBarsList([]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.ohlcv.OhlcvBar.prototype.toObject = function(opt_includeInstance) {
        return proto.ohlcv.OhlcvBar.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ohlcv.OhlcvBar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.ohlcv.OhlcvBar.toObject = function(includeInstance, msg) {
        var f, obj = {
            openTime: (f = msg.getOpenTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
            closeTime: (f = msg.getCloseTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
            open: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
            high: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
            low: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
            close: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
            volume: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ohlcv.OhlcvBar}
 */ proto.ohlcv.OhlcvBar.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.ohlcv.OhlcvBar;
    return proto.ohlcv.OhlcvBar.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ohlcv.OhlcvBar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ohlcv.OhlcvBar}
 */ proto.ohlcv.OhlcvBar.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = new google_protobuf_timestamp_pb.Timestamp;
                reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
                msg.setOpenTime(value);
                break;
            case 2:
                var value = new google_protobuf_timestamp_pb.Timestamp;
                reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
                msg.setCloseTime(value);
                break;
            case 3:
                var value = /** @type {number} */ reader.readDouble();
                msg.setOpen(value);
                break;
            case 4:
                var value = /** @type {number} */ reader.readDouble();
                msg.setHigh(value);
                break;
            case 5:
                var value = /** @type {number} */ reader.readDouble();
                msg.setLow(value);
                break;
            case 6:
                var value = /** @type {number} */ reader.readDouble();
                msg.setClose(value);
                break;
            case 7:
                var value = /** @type {number} */ reader.readDouble();
                msg.setVolume(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.ohlcv.OhlcvBar.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.ohlcv.OhlcvBar.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ohlcv.OhlcvBar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.ohlcv.OhlcvBar.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getOpenTime();
    if (f != null) {
        writer.writeMessage(1, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);
    }
    f = message.getCloseTime();
    if (f != null) {
        writer.writeMessage(2, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);
    }
    f = message.getOpen();
    if (f !== 0.0) {
        writer.writeDouble(3, f);
    }
    f = message.getHigh();
    if (f !== 0.0) {
        writer.writeDouble(4, f);
    }
    f = message.getLow();
    if (f !== 0.0) {
        writer.writeDouble(5, f);
    }
    f = message.getClose();
    if (f !== 0.0) {
        writer.writeDouble(6, f);
    }
    f = message.getVolume();
    if (f !== 0.0) {
        writer.writeDouble(7, f);
    }
};
/**
 * optional google.protobuf.Timestamp open_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */ proto.ohlcv.OhlcvBar.prototype.getOpenTime = function() {
    return /** @type{?proto.google.protobuf.Timestamp} */ jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1);
};
/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ohlcv.OhlcvBar} returns this
*/ proto.ohlcv.OhlcvBar.prototype.setOpenTime = function(value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.ohlcv.OhlcvBar} returns this
 */ proto.ohlcv.OhlcvBar.prototype.clearOpenTime = function() {
    return this.setOpenTime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.OhlcvBar.prototype.hasOpenTime = function() {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional google.protobuf.Timestamp close_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */ proto.ohlcv.OhlcvBar.prototype.getCloseTime = function() {
    return /** @type{?proto.google.protobuf.Timestamp} */ jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2);
};
/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ohlcv.OhlcvBar} returns this
*/ proto.ohlcv.OhlcvBar.prototype.setCloseTime = function(value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.ohlcv.OhlcvBar} returns this
 */ proto.ohlcv.OhlcvBar.prototype.clearCloseTime = function() {
    return this.setCloseTime(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.OhlcvBar.prototype.hasCloseTime = function() {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional double open = 3;
 * @return {number}
 */ proto.ohlcv.OhlcvBar.prototype.getOpen = function() {
    return /** @type {number} */ jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.OhlcvBar} returns this
 */ proto.ohlcv.OhlcvBar.prototype.setOpen = function(value) {
    return jspb.Message.setProto3FloatField(this, 3, value);
};
/**
 * optional double high = 4;
 * @return {number}
 */ proto.ohlcv.OhlcvBar.prototype.getHigh = function() {
    return /** @type {number} */ jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.OhlcvBar} returns this
 */ proto.ohlcv.OhlcvBar.prototype.setHigh = function(value) {
    return jspb.Message.setProto3FloatField(this, 4, value);
};
/**
 * optional double low = 5;
 * @return {number}
 */ proto.ohlcv.OhlcvBar.prototype.getLow = function() {
    return /** @type {number} */ jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.OhlcvBar} returns this
 */ proto.ohlcv.OhlcvBar.prototype.setLow = function(value) {
    return jspb.Message.setProto3FloatField(this, 5, value);
};
/**
 * optional double close = 6;
 * @return {number}
 */ proto.ohlcv.OhlcvBar.prototype.getClose = function() {
    return /** @type {number} */ jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.OhlcvBar} returns this
 */ proto.ohlcv.OhlcvBar.prototype.setClose = function(value) {
    return jspb.Message.setProto3FloatField(this, 6, value);
};
/**
 * optional double volume = 7;
 * @return {number}
 */ proto.ohlcv.OhlcvBar.prototype.getVolume = function() {
    return /** @type {number} */ jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.OhlcvBar} returns this
 */ proto.ohlcv.OhlcvBar.prototype.setVolume = function(value) {
    return jspb.Message.setProto3FloatField(this, 7, value);
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */ proto.ohlcv.Timeframe.oneofGroups_ = [
    [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
    ]
];
/**
 * @enum {number}
 */ proto.ohlcv.Timeframe.ValueCase = {
    VALUE_NOT_SET: 0,
    YEARS: 1,
    MONTHS: 2,
    WEEKS: 3,
    DAYS: 4,
    HOURS: 5,
    MINUTES: 6,
    SECONDS: 7,
    TICKS: 8,
    RANGES: 9,
    UNKNOWN: 10
};
/**
 * @return {proto.ohlcv.Timeframe.ValueCase}
 */ proto.ohlcv.Timeframe.prototype.getValueCase = function() {
    return /** @type {proto.ohlcv.Timeframe.ValueCase} */ jspb.Message.computeOneofCase(this, proto.ohlcv.Timeframe.oneofGroups_[0]);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */ proto.ohlcv.Timeframe.prototype.toObject = function(opt_includeInstance) {
        return proto.ohlcv.Timeframe.toObject(opt_includeInstance, this);
    };
    /**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ohlcv.Timeframe} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.ohlcv.Timeframe.toObject = function(includeInstance, msg) {
        var f, obj = {
            years: jspb.Message.getFieldWithDefault(msg, 1, 0),
            months: jspb.Message.getFieldWithDefault(msg, 2, 0),
            weeks: jspb.Message.getFieldWithDefault(msg, 3, 0),
            days: jspb.Message.getFieldWithDefault(msg, 4, 0),
            hours: jspb.Message.getFieldWithDefault(msg, 5, 0),
            minutes: jspb.Message.getFieldWithDefault(msg, 6, 0),
            seconds: jspb.Message.getFieldWithDefault(msg, 7, 0),
            ticks: jspb.Message.getFieldWithDefault(msg, 8, 0),
            ranges: jspb.Message.getFieldWithDefault(msg, 9, 0),
            unknown: (f = msg.getUnknown()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ohlcv.Timeframe}
 */ proto.ohlcv.Timeframe.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.ohlcv.Timeframe;
    return proto.ohlcv.Timeframe.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ohlcv.Timeframe} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ohlcv.Timeframe}
 */ proto.ohlcv.Timeframe.deserializeBinaryFromReader = function(msg, reader) {
    while(reader.nextField()){
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch(field){
            case 1:
                var value = /** @type {number} */ reader.readInt32();
                msg.setYears(value);
                break;
            case 2:
                var value = /** @type {number} */ reader.readInt32();
                msg.setMonths(value);
                break;
            case 3:
                var value = /** @type {number} */ reader.readInt32();
                msg.setWeeks(value);
                break;
            case 4:
                var value = /** @type {number} */ reader.readInt32();
                msg.setDays(value);
                break;
            case 5:
                var value = /** @type {number} */ reader.readInt32();
                msg.setHours(value);
                break;
            case 6:
                var value = /** @type {number} */ reader.readInt32();
                msg.setMinutes(value);
                break;
            case 7:
                var value = /** @type {number} */ reader.readInt32();
                msg.setSeconds(value);
                break;
            case 8:
                var value = /** @type {number} */ reader.readInt32();
                msg.setTicks(value);
                break;
            case 9:
                var value = /** @type {number} */ reader.readInt32();
                msg.setRanges(value);
                break;
            case 10:
                var value = new google_protobuf_empty_pb.Empty;
                reader.readMessage(value, google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
                msg.setUnknown(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */ proto.ohlcv.Timeframe.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.ohlcv.Timeframe.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ohlcv.Timeframe} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */ proto.ohlcv.Timeframe.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = /** @type {number} */ jspb.Message.getField(message, 1);
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = /** @type {number} */ jspb.Message.getField(message, 2);
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {number} */ jspb.Message.getField(message, 3);
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {number} */ jspb.Message.getField(message, 4);
    if (f != null) {
        writer.writeInt32(4, f);
    }
    f = /** @type {number} */ jspb.Message.getField(message, 5);
    if (f != null) {
        writer.writeInt32(5, f);
    }
    f = /** @type {number} */ jspb.Message.getField(message, 6);
    if (f != null) {
        writer.writeInt32(6, f);
    }
    f = /** @type {number} */ jspb.Message.getField(message, 7);
    if (f != null) {
        writer.writeInt32(7, f);
    }
    f = /** @type {number} */ jspb.Message.getField(message, 8);
    if (f != null) {
        writer.writeInt32(8, f);
    }
    f = /** @type {number} */ jspb.Message.getField(message, 9);
    if (f != null) {
        writer.writeInt32(9, f);
    }
    f = message.getUnknown();
    if (f != null) {
        writer.writeMessage(10, f, google_protobuf_empty_pb.Empty.serializeBinaryToWriter);
    }
};
/**
 * optional int32 years = 1;
 * @return {number}
 */ proto.ohlcv.Timeframe.prototype.getYears = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 1, 0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.setYears = function(value) {
    return jspb.Message.setOneofField(this, 1, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearYears = function() {
    return jspb.Message.setOneofField(this, 1, proto.ohlcv.Timeframe.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasYears = function() {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional int32 months = 2;
 * @return {number}
 */ proto.ohlcv.Timeframe.prototype.getMonths = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 2, 0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.setMonths = function(value) {
    return jspb.Message.setOneofField(this, 2, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearMonths = function() {
    return jspb.Message.setOneofField(this, 2, proto.ohlcv.Timeframe.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasMonths = function() {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 weeks = 3;
 * @return {number}
 */ proto.ohlcv.Timeframe.prototype.getWeeks = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 3, 0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.setWeeks = function(value) {
    return jspb.Message.setOneofField(this, 3, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearWeeks = function() {
    return jspb.Message.setOneofField(this, 3, proto.ohlcv.Timeframe.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasWeeks = function() {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional int32 days = 4;
 * @return {number}
 */ proto.ohlcv.Timeframe.prototype.getDays = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 4, 0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.setDays = function(value) {
    return jspb.Message.setOneofField(this, 4, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearDays = function() {
    return jspb.Message.setOneofField(this, 4, proto.ohlcv.Timeframe.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasDays = function() {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional int32 hours = 5;
 * @return {number}
 */ proto.ohlcv.Timeframe.prototype.getHours = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 5, 0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.setHours = function(value) {
    return jspb.Message.setOneofField(this, 5, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearHours = function() {
    return jspb.Message.setOneofField(this, 5, proto.ohlcv.Timeframe.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasHours = function() {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional int32 minutes = 6;
 * @return {number}
 */ proto.ohlcv.Timeframe.prototype.getMinutes = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 6, 0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.setMinutes = function(value) {
    return jspb.Message.setOneofField(this, 6, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearMinutes = function() {
    return jspb.Message.setOneofField(this, 6, proto.ohlcv.Timeframe.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasMinutes = function() {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * optional int32 seconds = 7;
 * @return {number}
 */ proto.ohlcv.Timeframe.prototype.getSeconds = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 7, 0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.setSeconds = function(value) {
    return jspb.Message.setOneofField(this, 7, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearSeconds = function() {
    return jspb.Message.setOneofField(this, 7, proto.ohlcv.Timeframe.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasSeconds = function() {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * optional int32 ticks = 8;
 * @return {number}
 */ proto.ohlcv.Timeframe.prototype.getTicks = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 8, 0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.setTicks = function(value) {
    return jspb.Message.setOneofField(this, 8, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearTicks = function() {
    return jspb.Message.setOneofField(this, 8, proto.ohlcv.Timeframe.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasTicks = function() {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional int32 ranges = 9;
 * @return {number}
 */ proto.ohlcv.Timeframe.prototype.getRanges = function() {
    return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 9, 0);
};
/**
 * @param {number} value
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.setRanges = function(value) {
    return jspb.Message.setOneofField(this, 9, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearRanges = function() {
    return jspb.Message.setOneofField(this, 9, proto.ohlcv.Timeframe.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasRanges = function() {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional google.protobuf.Empty unknown = 10;
 * @return {?proto.google.protobuf.Empty}
 */ proto.ohlcv.Timeframe.prototype.getUnknown = function() {
    return /** @type{?proto.google.protobuf.Empty} */ jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 10);
};
/**
 * @param {?proto.google.protobuf.Empty|undefined} value
 * @return {!proto.ohlcv.Timeframe} returns this
*/ proto.ohlcv.Timeframe.prototype.setUnknown = function(value) {
    return jspb.Message.setOneofWrapperField(this, 10, proto.ohlcv.Timeframe.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.ohlcv.Timeframe} returns this
 */ proto.ohlcv.Timeframe.prototype.clearUnknown = function() {
    return this.setUnknown(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */ proto.ohlcv.Timeframe.prototype.hasUnknown = function() {
    return jspb.Message.getField(this, 10) != null;
};
goog.object.extend(exports, proto.ohlcv);
