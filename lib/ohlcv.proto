syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "sym.proto";

package ohlcv;

service OhlcvApi {
  rpc Get(GetRequest) returns (GetResponse);
}

message Filter {
  string sym_id = 1;
  optional string timeframe = 2;
}

message Query {
  Filter filter = 1;
  optional uint32 limit = 2;
  optional uint32 offset = 3;
}

message GetRequest {
  Query query = 1;
}

message GetResponse {
  repeated OhlcvBar bars = 1;
  uint32 total_bars = 2;
  // uint32 bars_remaining = 3;
}

message OhlcvBar {
  google.protobuf.Timestamp open_time = 1;
  google.protobuf.Timestamp close_time = 2;
  double open = 3;
  double high = 4;
  double low = 5;
  double close = 6;
  double volume = 7;
}
